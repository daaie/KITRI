<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcI
        CQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAA9AHYDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD90Pif8YNL+F9tGtz5l1fXClobWIjcRg4ZifuqWGM8nrgHBx4v
        4g/ac8UapqTSWdxDpdvyEhjhSTAySCzOCS2CASMA46Cud+Leozap8TtekuH8yRb6WEHAGFRiijj0VQPf
        HrXO0H7RkXCuBoYeNStBTnJJttXWutknpp3tf8jeufin4lu7mSVtf1hWkYuQl26KCTnhVIAHsAAKZ/ws
        vxJ/0MGt/wDgdL/8VWJRQfTLA4ZKypx+5f5G3/wsvxJ/0MGt/wDgdL/8VR/wsvxJ/wBDBrf/AIHS/wDx
        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
        pYmatfZdktlfS/qf/9k=
</value>
  </data>
</root>